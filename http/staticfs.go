// Code generated by go-bindata.
// sources:
// static/javascript/slippymap.crosshairs.js
// static/javascript/whosonfirst.spatial.pip.init.js
// static/css/whosonfirst.spatial.pip.css
// DO NOT EDIT!

package http

import (
	"github.com/whosonfirst/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _staticJavascriptSlippymapCrosshairsJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\xdd\x6e\xdb\x38\x16\xbe\x96\x9f\xe2\xac\xf6\x42\x32\xe2\xc8\x6e\xb1\x4d\x1b\x1b\x46\xa1\xa4\xde\x36\xdb\x36\xe9\x26\x99\x1f\xb4\x28\x02\x5a\x3c\x96\xd8\x50\xa4\x40\x52\xb1\xdd\x36\xc0\xbc\xc3\xbc\xe1\x3c\xc9\x80\xfa\xb3\x64\x3b\x69\xc7\x37\x96\x78\x3e\x7e\xe7\x87\xdf\x39\xe2\x1d\x51\xa0\x39\xcb\xb2\x75\x4a\x32\x98\xb6\x9e\xbf\x7f\x87\x6f\xf7\x93\x5e\xaf\x59\x09\x22\x25\xb5\x4e\x08\x53\x1a\xa6\xe0\x2f\x72\x11\x19\x26\x85\xdf\xff\xd6\xeb\x01\x00\x58\x2a\x4e\x0c\x97\x02\xa6\x60\x54\x8e\x93\xcd\xba\x46\xbe\x80\x29\x7c\xeb\xf5\x1c\x8f\x09\x66\xbc\x31\x34\xfb\x53\x92\x59\x0a\xa7\xc6\x46\x52\x18\xc2\x04\x2a\x98\x82\x75\x1b\xa3\x39\xad\x97\xfc\xfe\x64\x03\x64\x14\xa6\x1b\x74\xc0\xe8\xa4\xc5\x42\x15\x59\xc2\x14\xda\x51\x3a\x8e\x0d\x23\xb0\x96\x9b\x4d\x2e\x3e\xa3\x35\xe9\x7d\x4d\xb0\x64\x82\xca\x65\x20\x85\x42\xcd\xbe\x22\x4c\x0b\xba\x49\x27\x48\xa9\xa8\x7e\xcc\x41\x01\x28\x92\xdb\x66\xb7\x49\x49\xe1\x7b\xa9\xbc\x43\x6f\x50\x51\xd5\xa8\xda\x48\x15\x89\x51\xd0\x07\xed\x5f\xa5\x4c\xb7\xed\x25\x62\x38\x84\x39\x46\x24\xd7\x08\x0b\xa9\xe0\xea\xe2\xfd\x0c\x2e\x67\xe1\xd5\xc5\x39\x98\x04\x35\x02\x95\xc2\x33\x30\x97\x26\x81\xa5\x54\xb7\xa0\x90\x33\x32\xe7\x6b\x60\xa2\xa1\xe7\x92\x50\xaf\xbf\x4d\x18\x04\x01\x9c\x5e\xbc\xff\xf0\xcb\xf5\xec\xf2\xea\x25\xf8\x4f\x47\x4f\x8e\x46\x2f\x46\xc7\x43\x93\x30\xcd\x34\x21\x4a\x0a\x4e\x04\xed\x57\x99\xda\x4a\x34\x47\x56\x55\xc4\xbe\xde\x0f\xac\x10\x5a\x75\x7a\x5c\x0f\x55\xa9\xa9\x8c\xf2\x14\x85\xb1\x8a\x98\x71\xb4\x8f\x27\xeb\x33\xea\xbb\x8d\x44\x0f\x4b\xac\xdb\xaf\x4b\xcd\x16\xe0\xff\xab\xae\x90\x25\x75\xf6\x33\x46\x0a\x89\xc1\x8a\xd4\x77\x29\xbb\xb3\x1c\x8e\x53\x22\x03\x8d\x26\x34\x46\xb1\x79\x6e\xd0\x77\x19\x75\x07\xf0\x80\x53\xe7\xa7\x14\xdc\x45\xdd\x20\x7f\x24\xbb\xb6\xc0\x4b\x17\xed\x8d\x41\x46\x14\x0a\x73\x2e\x29\x06\x4c\x68\x54\xe6\x04\x17\x52\xa1\x5f\x06\x35\xe8\x78\x09\x04\xae\xcc\x15\x9b\x73\x26\xe2\xfe\x04\x2a\x59\xf6\xda\xc7\x13\x48\x11\x71\x16\xdd\xee\x28\xbb\xe9\x6c\xbf\x7c\xea\xc3\x4b\x58\x10\xae\x11\xc6\x55\xb3\x3f\xac\x7e\x47\xa1\xc9\x95\xd8\xee\x03\x5b\x84\x4c\xea\x56\x91\x50\x98\xad\x1e\xe7\xc4\xc0\xd4\xa2\x3e\x79\x9c\x18\xef\x73\xdb\x54\x84\x53\x9a\x44\xec\x7d\x9e\x38\x50\xa5\xb4\xc1\xd8\x2e\xd9\xf0\x7f\x94\x32\xf5\xfb\x6d\xf7\xdc\x56\x3e\x17\x14\x17\x4c\x20\x6d\x91\x1b\x66\x38\x76\x6d\x1b\x45\x55\x15\x28\xf4\x64\xd7\x0a\x16\x4e\x4c\x60\xe4\x7f\xd9\x0a\xa9\x7f\xd4\x87\x03\xb0\x22\x81\x03\x1b\xe6\xd6\x3a\xfc\xdb\xae\xdb\xd0\x1a\xc3\xd3\xa2\x4c\xb5\x53\xb7\x28\x1f\x13\xc4\xa0\x06\xa2\x10\x28\xd3\x19\x27\x6b\xa4\x40\xb4\x75\xc4\x4c\x4e\x71\xc0\xa5\x88\x8b\x27\xf8\xeb\x8f\x3f\xa1\x3c\x36\x23\xc1\xc8\x38\xe6\xe8\xd6\xd5\x6e\x97\x04\xed\x79\x15\x61\x97\x21\xef\x84\x56\x85\xbc\x93\xca\x26\xe4\x7f\x10\x67\x1d\xde\xa0\x8e\xf8\xf1\x38\x3b\x32\xec\x76\x5c\xe1\xd0\x1d\x94\xa7\xd2\x9d\x27\x01\x13\x02\xd5\x35\xae\xac\x4e\x38\x9f\x54\xd9\xde\x0f\xec\x38\xf4\xb6\x66\x7d\x7b\xcc\x30\xda\x99\x32\xe9\x23\x2d\x58\x35\xde\x66\xa0\xa4\x45\x4b\x94\xaa\x2e\xbb\x60\x2b\x8b\x9d\x29\x60\x29\x4f\x64\x2e\x28\x13\xf1\x29\x67\x28\xcc\x25\x46\xa6\x91\xfa\x66\x57\x82\x2c\x4e\x4c\xe7\xc3\x56\x2e\xb5\xc4\xb9\x64\xd4\x24\x1d\x48\xb1\xb2\xc3\xd5\x24\x7e\xb3\xb6\x8d\x5b\x51\x0f\xe1\x69\x1f\x0e\xe1\xc5\x64\x1f\x70\x65\x81\x25\xbf\xc5\x75\x28\x87\x43\x48\x8c\xc9\xc6\xc3\xe1\x72\xb9\x0c\xf4\x1d\x32\x31\xff\x22\x95\x08\xa4\x8a\x87\x94\x18\x92\x2b\xae\x6f\x22\xad\xb7\xe3\xb0\xb6\x9b\x5c\x59\xc9\x79\xae\x7d\x19\xb3\x94\xc4\x38\x8c\xd9\x62\x32\x27\x1a\x8f\xfe\x33\xb8\x1c\xf1\xd7\x17\xaf\x78\x32\x5b\x86\xd7\xe1\xdb\xd9\x49\x68\x7f\x1f\x86\x9b\x9f\x07\x07\xd0\x73\x1c\x6f\xfd\xe6\xd9\x49\x38\x7b\x1b\x86\x67\xe1\xbb\x02\x14\x5e\x87\x27\xef\xc3\x30\x3c\x5b\xf2\xb3\x83\xec\x75\x12\xbe\xbb\xfc\x3d\xbf\xcc\x7f\x93\xd9\x07\x71\xf1\xe5\x79\x22\xe2\x59\x76\x99\x1e\x7d\x6c\x08\xd2\x70\x7e\x9d\x9f\x3e\x47\xc6\xcc\xff\xf8\xf9\x1b\xf5\xcc\xa4\xe7\xc7\xc7\xd1\x39\xfd\x7f\x76\x96\xe8\x5f\xcf\xc2\xf0\x95\x9e\xba\xde\x4e\x35\xb5\x59\x17\xaa\xff\x54\x0f\xa1\x62\x21\xc8\x72\x9d\xf8\x6e\x26\x35\xb3\xb2\x1a\x93\xb9\x96\x3c\x37\xe8\xf6\xf7\xa0\x8c\xcc\xc6\xb6\x91\xda\x07\x73\x00\x6e\xb6\xda\x8b\x2e\xcf\x6b\xfc\xe4\xf8\x01\x7b\x71\x4c\x0f\x9b\x39\x2e\xcc\x96\xb7\xd5\x23\xde\x52\xa2\x62\x26\x0e\x8b\x5d\x87\x2f\xb2\xd5\x64\x2f\xaa\xea\xf0\xf1\x9c\xcb\xe8\x76\x2f\x62\x4e\xa2\xdb\x58\x59\xa9\x1f\x36\x45\x81\xa8\x98\xec\xd5\xdf\x8f\xb6\x29\xcc\x90\x98\x31\x08\x59\x3d\xfe\x60\xc3\x18\x72\xc5\x7d\x9b\x69\x23\xb4\x03\x70\xfb\x7b\x77\x7d\x3d\x64\x82\xe2\x6a\xfc\x64\x34\x1a\x8d\xdc\xae\xbe\xeb\x03\x2e\xf1\x5f\x24\x13\xbe\x3b\x71\x3b\xdf\x8b\xce\x15\xf8\x67\xee\x23\x0d\x7e\xe7\x4e\xd2\x58\xca\xef\xc8\x7e\xe6\x07\xef\x25\x0d\xfa\x47\x77\x93\x4e\x00\x8e\x93\x06\x24\xcb\x50\xd0\xd3\x84\x71\xea\xb7\x82\xd8\x1e\xc3\x2d\x07\x45\x39\x22\xad\xab\x21\x5b\xbc\x57\xf0\x6a\x04\x56\x17\x80\xfb\x41\xaf\xfe\xc0\xb7\x8c\xf6\x56\x30\xe9\xf5\xee\xfb\x76\xda\xfd\x1d\x00\x00\xff\xff\xf0\xaf\x10\xdf\x70\x0c\x00\x00")

func staticJavascriptSlippymapCrosshairsJsBytes() ([]byte, error) {
	return bindataRead(
		_staticJavascriptSlippymapCrosshairsJs,
		"static/javascript/slippymap.crosshairs.js",
	)
}

func staticJavascriptSlippymapCrosshairsJs() (*asset, error) {
	bytes, err := staticJavascriptSlippymapCrosshairsJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/javascript/slippymap.crosshairs.js", size: 3184, mode: os.FileMode(420), modTime: time.Unix(1576188788, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticJavascriptWhosonfirstSpatialPipInitJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x5a\xfd\x72\x1b\x37\x92\xff\x9b\x7c\x8a\xce\x6c\x55\x38\x5c\x53\x43\xcb\x6b\x6f\x36\x54\xb8\x5b\x8a\x3f\xca\xba\x55\xec\x54\xac\xbd\xdc\x1d\x4f\xc5\x02\x67\x9a\x24\x4c\x0c\x30\x06\x30\xa4\x29\x45\x0f\x74\xaf\x71\x4f\xb6\xd5\x00\xe6\x8b\xa2\x2d\x25\xfc\x43\x9e\x19\x34\xba\x1b\xfd\xf1\xeb\x06\xe0\x1d\x97\x99\xda\x25\x2c\xcb\x5e\x6f\x51\xda\x4b\x6e\x2c\x4a\xd4\x71\x24\x14\xcb\xa2\x11\x2c\x4b\x99\x5a\xae\x24\xd0\x7b\x8c\x44\x33\xbc\xed\xf7\x7b\x5b\xa6\x21\x67\xc5\x59\xf5\xa4\x37\xa8\xcf\x7a\xbd\x1e\x00\x80\xff\x96\x32\x99\xf1\x8c\x59\x34\x81\x88\x4b\x8b\xda\x60\x6a\xb9\x5c\xc1\x14\x66\xd7\x67\x81\xcf\xc7\x32\x2f\xe6\x56\xc1\xb4\x96\x16\x1b\xab\xe7\x82\x59\xa1\xa4\x93\xd6\x6b\xde\x61\x0a\xcd\x4b\x62\x35\xcf\xe3\xe1\x59\xbf\xd7\xeb\xf7\x7a\x7c\x09\x71\x9b\x70\x0a\x51\x34\xbc\xed\xf7\x7a\x3d\x8d\xb6\xd4\x12\x96\x4c\x18\x24\xe2\x3b\x3f\x81\x84\x1f\xe3\x6a\x0a\xc1\x6d\x1c\x8d\xa2\x21\xa9\xe8\xf8\x86\x11\x81\x72\x65\xd7\xf0\xcd\x14\x9e\x0d\xc1\xb1\x66\x02\xb5\x8d\xa3\x0b\xb9\x65\x82\x67\xc4\x6e\x44\xfc\x0a\xc6\x75\xe4\x14\x3b\x22\xbc\x11\x0d\x53\x28\x98\x36\xf8\x46\x28\x66\x83\x90\xd9\xd3\xeb\x46\xee\x37\x44\x35\xfc\x82\x24\x6e\xcb\x0c\x1f\x94\xe2\x56\x77\x5f\xca\xe9\x75\xdb\x6e\xdf\x80\xb7\xf5\x11\x39\x4a\xae\x1e\x14\x94\xb3\x22\x31\x68\xff\x93\xe3\x2e\x9e\x39\x23\x38\xb9\xd7\x23\x0a\x92\x64\x85\xf6\x7f\x94\xca\xe3\xa1\x5f\x57\xa6\xd9\x6e\x9e\x2a\xa5\x33\x13\x57\xa4\xc3\x33\x52\xe5\xee\xac\xdf\xf3\x31\xd1\xa2\x69\xc7\x45\x4d\x7e\x5b\x19\x28\x58\x08\x7e\xfb\xad\x5a\x84\x5f\x85\x0b\x41\xa4\x90\x83\x69\xa5\xc4\x4b\xf7\xee\xe3\xa5\xe7\xad\xef\x49\x12\xc1\xac\xff\xe8\x8c\x55\x7d\x94\xab\x56\xb0\x78\x7a\xc1\x6c\x62\xd5\x1b\xfe\x19\xb3\xf8\xaf\x8e\x91\x9f\xe2\x82\xb1\xf3\xbd\x8e\xb0\x15\xaa\x8f\xc6\x11\x39\xc5\x22\xbb\x2f\x30\x9a\x40\xf4\x06\x99\x2d\x35\x46\x23\xf7\x75\x85\x2a\x47\xab\xf7\xd1\x04\x6e\xa1\xa6\xf9\x59\x71\x69\xa3\x11\x44\xce\x14\x5c\x52\x3a\x45\x13\x98\x91\xbc\x91\x0b\xa0\x6b\x20\xfd\xee\x5a\xae\xf4\xc9\xe8\xad\xe0\x9f\x13\x8d\xb9\xda\x62\x9c\xb3\x62\xd8\x5a\x91\x1f\x84\x29\x5c\x26\x2b\x54\xff\xf1\xe1\xfd\xbb\x38\xe8\xea\xa8\xc2\x5c\x96\x65\x57\xaa\x9a\xda\x38\x68\x89\x36\x5d\xb7\x5d\x53\x6a\x31\x82\x74\xe1\xe4\x86\x95\x6b\xfc\x04\x53\x90\xb8\x83\xff\xfa\xe9\xf2\xad\xb5\xc5\x2f\xf8\xa9\x44\x63\xeb\x8c\xd5\xf8\x29\x51\x92\xa0\xa5\xcd\xc9\xab\x5e\x39\x51\x9b\xe2\xac\x7a\xb7\x7a\xef\x8d\xd8\xd3\xa6\x80\x29\x90\xce\x89\x0b\xed\xd8\xae\xb9\x49\x34\x9a\x42\x49\x83\x57\xf8\xd9\x0e\xcf\xfa\xd0\xfa\xf9\x55\x3b\x2e\x29\x23\xd5\x63\xf4\x72\x7a\xa9\x92\x46\x09\x4c\x84\x5a\xc5\xd1\xeb\x5f\x7e\x89\x46\xe0\xd6\x82\xc1\x8d\x87\x01\xdf\x62\xb4\x88\xb5\x29\x1a\x41\x8d\x1f\xdc\xc2\x0a\x94\x71\xb4\x42\x5b\x31\xb4\xba\xf4\x3c\x69\xd4\xa0\xcc\x9c\x1d\xee\x3a\x16\x9d\x37\xb0\xf9\xe5\xb8\x1f\x8f\xc1\xae\x11\xc6\x2d\x5a\x94\x59\x41\xb1\x02\x5e\x5b\x53\x47\xdd\x62\x0f\x19\x2e\x59\x29\x6c\xe3\x97\x52\x0b\x98\xc2\x60\x6d\x6d\x31\x19\x8f\x07\xf0\x04\x84\x4a\x19\x09\x4a\xd6\xca\x58\x78\x02\x83\x16\xef\x7f\x54\x48\x33\x75\x94\xcc\x8d\x7f\x5b\xc3\x82\xff\xaa\xe4\x59\xc3\x5f\x49\x53\xa6\x29\x9a\xce\x12\xc8\x52\xb5\x63\x29\x4e\x1b\x09\x95\x23\xea\x0f\x87\x01\xdb\x98\xdc\xb3\x47\xd6\x8d\xbd\xe5\x08\x44\x60\x42\x04\x85\x56\x85\x93\x3d\x8b\xe8\x11\xb5\xe5\x68\xa2\x6b\xef\x4e\x91\x2c\xb8\xcc\x7e\x56\x45\x59\xc4\x8e\x70\x16\xf1\x2c\xba\x0e\x72\xce\xda\x82\x98\x5e\x99\x2a\x6d\x7b\x4a\xbe\x66\xe9\x3a\x24\xed\x24\x28\x31\xea\xb9\x5f\xf0\x7f\x97\x43\xc7\x93\x4d\x8a\x69\x53\x8c\x1c\x67\x2f\xb1\xb5\xe8\x4e\xa6\x35\x5a\x34\x14\x73\xc1\x0d\x81\x50\xa6\xd2\x32\x47\x69\x09\xd3\x5e\x0b\xa4\xc7\x1f\xf7\x17\x59\x1c\x35\xa4\x27\x44\x1a\x1d\x8a\x70\x0c\x12\x2e\x25\xea\xb7\x57\x3f\x5d\x02\x55\xc8\x8e\xac\xa5\x5f\x1e\x69\xac\x4d\x31\x8b\xaa\xf7\x60\x3c\xa7\x8e\x2a\xa5\x9d\xb7\x08\xab\xc7\x50\x1c\x6b\x7e\x4b\xa5\x21\x76\x85\x7f\xfa\xf4\x0c\x38\xfc\x70\x30\xf5\x0c\xf8\x93\x27\xc1\x6b\xf7\x5d\x17\x88\x66\xfc\xfa\x98\x13\x1d\x5b\x02\x8d\x96\x07\x5d\x6d\xa9\x74\xcc\xb0\x6d\xa7\x54\x23\xb3\x18\x4c\x15\x47\x34\x1c\x0d\x43\xf2\x67\x98\xb0\xa2\x40\x99\xbd\x5c\x73\x91\xc5\x07\x73\x08\x49\xde\xa9\x0c\x63\x9e\x0d\x1b\x58\x0f\x0a\x58\xcc\xbf\x22\x45\xf0\x60\xff\x1e\x11\x52\x79\x3c\xb7\x56\xf3\x45\x69\x31\x26\x85\x09\xd5\x2b\xcf\x9c\x44\xf0\x04\x78\xd6\x96\xe0\x26\xb5\x35\x23\x55\x03\xc1\xa1\x47\xdb\x64\x34\xaf\x4a\x9a\x7b\xb8\xe4\x30\xc6\x43\x75\x9d\xa4\x47\x70\x7d\x7e\xd0\xab\x1d\xc3\xa1\x3a\xdb\xbd\x57\x0f\x66\xb4\x5f\x5b\x81\xd1\xff\x72\x58\xb4\x67\xb4\x42\xa3\xfd\x79\xc6\xaf\xbf\x50\xca\x8e\xf4\x96\xbf\x0b\xed\x1e\x89\x71\xee\xeb\x52\xe9\x9c\xd9\x69\x00\xd8\xc1\xe3\x70\xaf\x02\xbd\xd8\xa5\x95\x2b\xef\xd7\x43\xf8\xf6\xdb\xee\x17\xd7\xb3\x06\x88\x79\xa9\x84\x40\xc7\x22\xf2\xdd\xcd\x17\xe8\xa2\x61\xe8\x78\x7a\x66\xad\x76\xf3\xa0\x56\x28\x4c\x4d\xfd\xf2\x11\xe1\x63\xab\x4a\xe5\x42\xb0\xb4\xc9\x75\xff\x76\x98\xe9\x94\x63\x6e\xa0\xf2\x62\x83\x78\xfd\xaf\x64\xf9\xd1\xe4\x36\x85\xae\xd9\xcd\x78\x2b\x95\xbd\x8b\x4c\xa1\x67\x51\x7e\x33\x29\x35\xaf\xb3\xd9\xf7\xa6\xa5\xae\xe0\xbd\x5b\xad\x73\x6e\x0c\x79\xdc\x4f\x82\x80\x13\xfb\x11\x18\x05\x66\xc3\x8b\x82\xcb\x55\x95\x84\x6d\x3b\xf8\xa6\xd5\x15\xd2\xb2\xa0\x3c\x6a\xca\x6e\x6c\x0a\x1d\x66\xf8\x54\xa8\x0c\x4a\x3a\xfc\x81\xb4\xf2\x59\x75\x28\xa5\x1d\x20\x0e\xc2\x68\x37\xd1\x77\x56\x3d\x84\xb6\x9d\x5a\x4e\x3c\xbc\xd5\xc3\x92\xe5\xd8\x25\xa0\x2f\x15\x36\x36\x74\xe9\xa3\x6a\x45\x83\x3d\x7e\xa6\x33\x79\xea\xec\xdd\x31\xf6\xbf\xde\x9d\xff\x78\xf9\x1a\xae\xde\xc3\xbf\x7e\x7e\x75\x7e\xf5\x1a\x5e\x9e\xbf\x7b\x75\x41\x4f\xd1\xa8\xc2\xae\xda\xc6\xc4\xe8\x2e\x30\x4c\x1f\x05\xb0\x11\x90\x1e\xb4\x10\x07\xb4\x7e\x62\x17\x34\x53\xc1\x8c\x21\xdc\xac\xd3\xdd\x44\x1d\x33\xb7\x33\xe0\x68\x0e\x3a\x22\xbb\x17\x58\x77\xe3\xa9\x12\x4a\x53\xab\xfd\xa7\x37\x6f\xfe\xfa\xfd\x8f\xcf\x43\x3b\xbe\x43\xbe\x5a\xdb\x68\x02\x2f\xfc\xbb\x2a\x58\xca\x2d\x75\xe7\x4f\x93\xbf\xbd\x68\x75\xdc\x0f\x35\x24\x0f\xf5\x23\x47\xda\x91\xc6\xa1\x1e\xe2\x5a\x92\xda\x1d\x89\x5b\xc7\xc4\x2f\xc7\x29\xf9\xb8\x0e\xa5\xcd\x4e\xb0\xfd\xc1\x06\xa0\xdb\x9d\xb8\xf1\x83\xbe\xe4\x00\x6d\x93\xa2\x34\xeb\xd8\x11\xfa\xdd\xdd\xc3\x6d\x44\x1b\x5b\xee\x35\x0f\x5f\xae\x10\x0d\xa4\x54\xf1\x1d\x26\x77\xdb\x85\xb3\x16\xc1\x41\x37\x71\xdf\xfc\x44\x78\x0f\x01\x7c\x42\x86\xea\x72\x58\x19\x8f\x44\x57\x85\x4e\x8f\xea\x7e\x8f\x80\xf4\x1f\xa8\xd2\x05\x2f\xee\xed\x98\xfa\x0f\x6f\x7a\x9b\x53\x87\xee\xbe\xb7\x39\x27\xe8\x6e\x7d\xff\xc0\xb6\xb7\x52\xbf\xb5\x91\x69\x6d\xf2\xeb\xd1\x76\x08\x75\x0e\x01\xba\xc7\x00\xac\xe0\xf3\x0d\xee\xdb\x38\xb6\x50\xd9\x9e\xd6\xd5\xc2\x85\x8c\x59\x76\x92\xb3\xe2\x06\xe5\x09\x2b\xf8\xc9\x06\xf7\xfe\xe8\xc6\xa5\xbb\x2a\xb5\xaf\x72\xb7\x1e\x55\x3c\xe1\xc4\x25\x51\xa9\xc5\xc4\xb7\x06\x66\x32\x1e\xdf\x9a\xbb\xc4\x72\x81\x89\xc4\xcf\xf6\x06\x65\xa2\xf4\x6a\x4c\x1f\x6e\x50\x8e\xb7\x98\x5a\xa5\xc7\xdb\xd3\xf1\x8b\xd3\x67\x63\x26\xc4\xf8\xf6\xe6\x6e\x7c\xfb\xf9\x6e\x7c\xbb\xbf\x4b\xac\x2a\x7c\x3b\x30\xf2\x5c\xe7\xa6\x5c\x64\x2a\x67\x5c\x9a\x09\xcc\x06\x6c\x30\x82\xc1\x82\xfe\xa4\xf4\x27\x1b\x5c\x57\x74\x05\xd3\x2c\x37\x5e\x1b\xd2\x2e\xac\x78\x52\x3d\x50\x8d\x92\xca\x42\x2a\x90\x69\xa0\x5d\x2e\xb0\xd4\x96\x4c\x88\x3d\xec\x94\xde\x98\x24\x49\xe0\x1f\x14\xab\xc4\x91\x94\x9d\x1b\x7e\x83\x13\x78\x71\xfa\x6c\xe4\x76\xf1\x9f\xe7\x37\x4a\xe5\x13\x38\x7d\x51\xc1\x72\x0b\x30\x53\x94\x1e\x0b\xe1\xe0\xc7\xf3\x42\x69\x3b\x81\x19\x05\x2d\x44\x63\xcb\xe4\x4a\xb3\x7c\xac\x71\xc9\x85\x38\x71\xa8\x93\xdc\xf0\xc2\xe3\xe5\x17\x08\x4e\xec\x1a\x73\xda\x8c\xb0\x05\x8a\x16\xf5\xf5\xe8\x9e\xbc\xe0\xa6\x49\xf5\x40\x84\x2b\xa1\x16\x4c\x34\xb6\x31\xd9\x66\xee\xbd\x37\x3f\x34\xd3\x28\x58\xa0\x5e\x19\x0b\xe1\xc1\x95\x6c\xf9\x3e\xba\xf2\x5a\x12\xe0\x57\x5e\x5f\x71\xbb\x2e\x17\x49\xaa\xf2\x6a\x0d\x66\x4c\x7a\x3a\xfa\xff\xff\x3f\x78\xff\xe1\x27\x48\x95\xf4\xec\x94\x36\xd5\xdc\xc9\x78\xbc\xdb\xed\xdc\x36\xdf\x58\x8d\x68\x29\xe1\x28\x62\xea\xc9\xbf\xae\xd5\xff\x46\x06\xde\x4b\x78\xc3\xb5\xb1\x07\x13\x77\x6b\x65\x94\x5c\xd2\x48\x77\xda\x3b\x1f\x7d\x6d\x1d\xdb\x01\x19\x1d\x2e\xd3\xd4\xa7\xa9\x35\x72\x3a\x83\x03\x97\x1d\x33\x0c\xdb\x2d\x86\xe0\x72\x03\x53\x3f\x7f\xe6\xc8\xaf\x3b\x0d\x80\x23\x70\xb8\xe2\x48\x2a\x98\x5f\xa0\xef\x82\xc8\x20\x5c\x96\x58\x97\xfa\x70\xf2\x5b\xb1\x67\x32\x5d\x2b\x42\xa1\xc1\x0f\x0c\xd6\x1a\x97\xd3\xc8\xf5\xd0\x24\xf5\x09\x0c\x22\xb0\x4c\xaf\xd0\x4e\xa3\xf9\x42\x30\xb9\x89\xfe\x4e\xa3\x28\xd3\xb9\xd7\xfc\x09\x0c\x7e\x18\xb3\xbf\x0f\x02\xfb\x96\x0a\x9e\xb1\x3f\x38\x09\x31\x6c\xf5\xfc\xc0\xdb\x9e\xfe\xa3\xe2\x32\x8e\xe0\x37\xf0\x60\x30\x1e\xc3\x8e\x71\xb7\x43\x20\x3b\x55\x26\xfd\x68\xc0\x2a\x58\x60\xa8\x03\x19\xbd\x65\x0a\x98\x10\xee\x90\xc5\xae\xb9\x5c\x19\x38\x01\xbb\x66\x16\x0c\xe3\x19\x70\x3b\x30\xfd\x2a\x2f\x51\x5a\xae\x51\xec\x43\x82\xee\x10\x24\x62\xe6\xa6\x2b\x77\x18\x57\x38\xe7\x0d\x83\x28\x26\x33\xaa\x66\x22\xa3\xda\xb4\x60\x0b\xb1\x87\x15\x5a\xc7\x8d\xed\xd8\x1e\x76\xdc\xae\x41\x20\x5b\x0a\xa4\x3d\x48\x08\x48\x58\x94\xd6\x2b\xad\x76\xb0\xc3\x81\x10\xf0\xb1\x34\x16\x36\x88\x05\x28\x09\xcc\x9c\x70\x02\x02\xc7\x27\x7e\xf6\xf4\xf4\x6f\x4f\xff\xf2\xf4\xf9\x98\xd0\x82\x1b\xc6\xb4\x92\x82\xc9\x6c\x48\x46\xf8\x73\xbf\xdf\xbb\x4c\x7e\x72\x59\x94\xb0\x82\xff\xd3\xa1\x6b\xc8\xa2\xb3\xe6\x64\x7f\xae\x0a\xdb\x4a\x9c\xa0\xc8\xfb\xc2\x99\xd8\xa7\xa4\x03\x8f\x89\xc7\x90\x51\x08\x94\xe0\x84\x49\x27\xf0\x46\x6d\xe0\xe9\xf5\x7b\x39\x2b\x5c\xd3\x11\xb4\xc8\x59\x11\x0f\x72\x56\x0c\x46\xb5\x60\x72\x58\x85\x0c\x75\xa3\xe2\xe2\xbc\xdf\xeb\x45\x92\x9a\xb3\x85\x2a\xf5\x5a\xa9\x2c\x1a\x55\xdb\x91\x43\x48\x89\x68\x9f\x27\xa8\x6b\x23\xed\x22\x8d\x2b\xda\x4c\xb9\x67\xd7\x50\xe8\x7d\x54\xcf\xa1\x6e\xa0\x23\xd1\xe3\x72\xe8\xb5\xa2\x00\x4a\x94\x92\x3b\xb5\x6c\xa6\x35\x95\xaa\x31\x57\x2f\xf2\xda\x46\x93\xa0\xb6\x93\xe8\xf9\x45\x93\xc0\x78\xd4\xae\x72\x2b\x54\xb4\xb9\xd7\x6d\xa3\x54\xdf\xe2\x60\x8e\x5e\xf5\xa1\xdb\x8e\xb5\x9c\xb9\x66\x66\x1d\xdf\xfa\xc3\xf8\x09\x59\xb2\xdf\xbb\x23\x92\x3f\x8f\x7d\xf0\xaf\x59\xba\x01\xea\xc3\x29\x03\x7c\xb0\xbb\xd0\x0f\x89\x30\xf6\xc8\x4a\x41\x7a\x02\x8a\xea\x66\x8e\x4a\x22\x58\x14\xc2\x40\x8e\x3e\x81\x28\x09\x28\x2d\x52\xa5\x35\xa6\x16\xcc\x5e\x5a\xf6\xd9\xc5\x66\xa6\x88\x31\x0d\xe2\xa7\x92\x6f\x99\x40\x69\x29\x07\x5c\xcd\x7a\x6c\x78\xba\xa4\x42\x9f\x6c\x3b\x04\x66\x4c\x99\x23\x5c\x86\x84\x58\x33\x03\x0b\x44\x7f\x1b\x85\x19\x2c\xf6\xd0\x68\x4d\xa9\xb5\xf3\x6a\xe2\xe7\x42\xf0\x94\x5b\xb1\x77\x94\x55\xf4\x12\x15\x97\xc0\x65\x86\x9f\x93\xb5\xcd\xc5\xc3\x0a\x55\xa1\x4a\x31\x1a\xe5\xac\x68\xfa\x8a\x2a\x35\xa7\x10\x6a\x4a\x12\xd2\xf6\x92\x9c\x1e\x1f\x4b\x10\x59\xe6\xbf\x2a\xbd\x41\x6d\x26\xe0\x8a\x73\xe9\xce\xbe\x2f\xe4\x96\x1b\xbe\x10\x78\xc5\x05\x55\x40\x77\xd2\xec\x86\x9d\x93\x7e\x5d\xa3\xbc\xc8\xa8\xd5\xaf\x07\x3a\x99\x76\x88\x7f\x55\xb6\x39\x4d\xab\x95\xb7\x83\xc6\xad\xfa\xf5\xbb\x57\xf0\xfe\xcd\xe3\x83\xc2\xcf\x7a\x75\xf1\x0a\x2e\xe0\xc3\xf9\x7f\xc3\xd5\xdb\x8b\x0f\xf0\xeb\xf9\x07\xb8\x7a\xfb\xba\x62\x46\x8f\x6f\xcf\x5f\xfe\x93\x5a\x92\x8b\xab\xc1\x07\x78\xf7\xfe\x6a\x04\xe7\x97\xe7\x1f\x3a\x86\xfe\xee\x98\xa1\x9b\xd6\xf4\x2f\xdf\x25\xdf\x7d\xf7\xfc\xfb\x70\x6b\xe8\xfb\xcc\x93\xd3\x67\xcf\x92\xe7\xa7\xdf\x3f\x0f\x5f\xa9\xa3\x81\x29\x9c\x3e\xab\xbc\x41\xc1\xef\xfa\xd1\xea\x64\x87\x99\xf5\x59\xbf\x17\x3e\xd3\x3f\x89\x29\x17\xc6\x6a\xea\x37\x4f\x47\x43\xd2\xc7\x1f\x25\x11\xda\xba\xd5\xff\xa9\xdf\x77\xc7\x0d\x44\xdc\xec\x16\x6b\x1c\xf0\x3c\xfc\xcd\xe0\xb7\xd1\xf0\x70\x23\xe3\xe9\x7e\xc7\x36\xa6\xb5\x4d\xd9\x6c\x6b\x06\x33\x7e\x5d\x09\x99\x86\xeb\xc7\xaa\x24\x6f\xb6\x9d\xeb\x47\xb7\x9b\xe8\x6c\xd0\x79\xb8\xb1\x73\x9c\xd0\xa2\x8e\x46\xb0\xd9\x0e\x03\x9d\x2b\xd7\x81\xdd\x5d\x97\xef\xec\xa9\x3f\x51\x12\xcc\x86\x0b\x53\x1a\xbb\x77\x3d\xb9\xd9\x56\x97\x86\x1d\x1e\x28\x0c\x1e\x32\x92\xab\x36\xa3\xc3\x1b\xc8\xc7\x33\xba\x09\x6c\x82\xbf\x1d\x8f\x0b\x59\x71\x38\xca\xe0\xbe\x5d\x4a\x69\xca\x82\xba\x59\x3c\x66\x9b\x50\x99\x5c\x3b\x71\xe7\x33\xbe\xb9\xca\xac\x76\x26\xd7\x23\x17\x72\x55\xf2\x5c\x0c\xb6\x54\xe7\xb7\xa8\xa1\x94\x19\x6a\x63\x95\xca\x60\xb7\xde\xc3\x85\x2f\xff\x56\x41\xe0\x01\x0b\x5c\x2a\x8d\xc0\xe5\x56\x6d\x2a\x80\x74\x61\xe9\x3a\x8b\xbd\xe3\xc7\x65\x0b\xc7\xa8\xd6\x53\x8b\x01\xcc\x93\x50\x36\x7d\x35\x75\x1e\xaa\x00\xfd\x9e\x11\xbc\x28\xf6\xb4\xb2\x54\x2b\x63\xd6\x8c\x6b\x93\x70\xc9\x6d\x53\x46\x5c\xf3\x2a\xe3\x28\xd3\x6c\x85\x32\x8b\x46\xb4\xc7\xa4\xa1\x82\x17\xf1\xb0\x73\x55\xbf\x54\x3a\xff\xda\xc9\x12\x11\x9d\x58\x75\x42\x74\x91\xe7\x5e\xcf\x4b\x68\x43\xbb\xc8\xb9\x3d\xd8\xbe\x86\x6c\xe2\xb2\x28\xbf\x7a\xc3\x51\xf1\xf6\x97\xd8\x21\x43\xc2\x7f\x20\x88\xdd\xec\x64\xcb\x44\x7d\xcf\xd6\xb9\xb9\xbb\x3b\xeb\x93\x39\xfe\x1d\x00\x00\xff\xff\x89\xb7\x3a\x1c\xf3\x20\x00\x00")

func staticJavascriptWhosonfirstSpatialPipInitJsBytes() ([]byte, error) {
	return bindataRead(
		_staticJavascriptWhosonfirstSpatialPipInitJs,
		"static/javascript/whosonfirst.spatial.pip.init.js",
	)
}

func staticJavascriptWhosonfirstSpatialPipInitJs() (*asset, error) {
	bytes, err := staticJavascriptWhosonfirstSpatialPipInitJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/javascript/whosonfirst.spatial.pip.init.js", size: 8435, mode: os.FileMode(420), modTime: time.Unix(1576188788, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticCssWhosonfirstSpatialPipCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xd1\x6a\xf4\x20\x10\x85\xef\xf3\x14\x03\xcb\x7f\x69\x30\xfc\x2c\x05\xf7\x69\x8c\x9a\x64\x5a\x75\x44\x27\x6c\xd2\xd2\x77\x2f\x5b\x4d\x1b\x7a\xd1\xde\xc9\xe7\x9c\x73\x66\xce\x48\x76\x87\xb7\x0e\x00\x60\xa2\xc8\x62\xd2\x01\xfd\xae\xa0\xe8\x58\x44\x71\x19\xa7\xdb\xf7\x67\xc1\x57\xa7\x60\xe8\xff\xbb\x70\xeb\xde\xbb\xee\x12\x74\x6a\xe2\xc5\xe1\xbc\xb0\x82\xab\x94\x69\xab\x92\x3b\x5a\x5e\x14\x0c\x52\xfe\xab\x60\xa4\x6c\x5d\x56\x50\xc8\xa3\x05\x5e\x30\x56\x97\xc2\x9a\xd7\xd2\x8c\xd8\x6d\x2c\xb4\xc7\x39\x2a\x30\x2e\xb2\xcb\x9f\x43\x3d\x3e\x9e\xc5\x19\x2e\xe7\x75\xef\x2d\xf6\x49\xca\x96\xa1\xcd\xcb\x9c\x69\x8d\x56\x18\xf2\x94\x15\x5c\x8c\x31\x2d\xc7\x63\x4a\x7b\xd0\x49\x18\xa2\x6c\x7f\x4b\xfc\x71\x72\x09\xda\xfb\x4a\x83\xce\x33\x46\xc1\x94\x14\xf4\xd7\xa3\x88\xe7\x35\x24\xc1\x24\x26\xca\xe1\x0f\xdb\x93\x41\xd5\x9f\xe0\x48\xcc\x14\xd4\x70\xe0\xda\xd8\x81\x61\x48\x5b\x2b\xaf\x1e\xf5\x18\x49\xda\x5a\x8c\xf3\xd7\xcc\xb1\xd3\x47\x00\x00\x00\xff\xff\x1b\xe1\xfd\x89\xd9\x01\x00\x00")

func staticCssWhosonfirstSpatialPipCssBytes() ([]byte, error) {
	return bindataRead(
		_staticCssWhosonfirstSpatialPipCss,
		"static/css/whosonfirst.spatial.pip.css",
	)
}

func staticCssWhosonfirstSpatialPipCss() (*asset, error) {
	bytes, err := staticCssWhosonfirstSpatialPipCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/css/whosonfirst.spatial.pip.css", size: 473, mode: os.FileMode(420), modTime: time.Unix(1576188788, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"static/javascript/slippymap.crosshairs.js": staticJavascriptSlippymapCrosshairsJs,
	"static/javascript/whosonfirst.spatial.pip.init.js": staticJavascriptWhosonfirstSpatialPipInitJs,
	"static/css/whosonfirst.spatial.pip.css": staticCssWhosonfirstSpatialPipCss,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"static": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"whosonfirst.spatial.pip.css": &bintree{staticCssWhosonfirstSpatialPipCss, map[string]*bintree{}},
		}},
		"javascript": &bintree{nil, map[string]*bintree{
			"slippymap.crosshairs.js": &bintree{staticJavascriptSlippymapCrosshairsJs, map[string]*bintree{}},
			"whosonfirst.spatial.pip.init.js": &bintree{staticJavascriptWhosonfirstSpatialPipInitJs, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
